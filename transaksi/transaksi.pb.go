// Code generated by protoc-gen-go. DO NOT EDIT.
// source: transaksi.proto

package transaksi

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TransaksiData struct {
	IdTransaksi          int64    `protobuf:"varint,1,opt,name=id_transaksi,json=idTransaksi,proto3" json:"id_transaksi,omitempty"`
	IdPengirim           int64    `protobuf:"varint,2,opt,name=id_pengirim,json=idPengirim,proto3" json:"id_pengirim,omitempty"`
	IdPenerima           int64    `protobuf:"varint,3,opt,name=id_penerima,json=idPenerima,proto3" json:"id_penerima,omitempty"`
	Nominal              float32  `protobuf:"fixed32,4,opt,name=nominal,proto3" json:"nominal,omitempty"`
	WaktuTransaksi       string   `protobuf:"bytes,5,opt,name=waktu_transaksi,json=waktuTransaksi,proto3" json:"waktu_transaksi,omitempty"`
	NamaPengirim         string   `protobuf:"bytes,6,opt,name=nama_pengirim,json=namaPengirim,proto3" json:"nama_pengirim,omitempty"`
	NamaPenerima         string   `protobuf:"bytes,7,opt,name=nama_penerima,json=namaPenerima,proto3" json:"nama_penerima,omitempty"`
	ErrorsMessage        []string `protobuf:"bytes,8,rep,name=errors_message,json=errorsMessage,proto3" json:"errors_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransaksiData) Reset()         { *m = TransaksiData{} }
func (m *TransaksiData) String() string { return proto.CompactTextString(m) }
func (*TransaksiData) ProtoMessage()    {}
func (*TransaksiData) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d8339947edf5dbf, []int{0}
}

func (m *TransaksiData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransaksiData.Unmarshal(m, b)
}
func (m *TransaksiData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransaksiData.Marshal(b, m, deterministic)
}
func (m *TransaksiData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransaksiData.Merge(m, src)
}
func (m *TransaksiData) XXX_Size() int {
	return xxx_messageInfo_TransaksiData.Size(m)
}
func (m *TransaksiData) XXX_DiscardUnknown() {
	xxx_messageInfo_TransaksiData.DiscardUnknown(m)
}

var xxx_messageInfo_TransaksiData proto.InternalMessageInfo

func (m *TransaksiData) GetIdTransaksi() int64 {
	if m != nil {
		return m.IdTransaksi
	}
	return 0
}

func (m *TransaksiData) GetIdPengirim() int64 {
	if m != nil {
		return m.IdPengirim
	}
	return 0
}

func (m *TransaksiData) GetIdPenerima() int64 {
	if m != nil {
		return m.IdPenerima
	}
	return 0
}

func (m *TransaksiData) GetNominal() float32 {
	if m != nil {
		return m.Nominal
	}
	return 0
}

func (m *TransaksiData) GetWaktuTransaksi() string {
	if m != nil {
		return m.WaktuTransaksi
	}
	return ""
}

func (m *TransaksiData) GetNamaPengirim() string {
	if m != nil {
		return m.NamaPengirim
	}
	return ""
}

func (m *TransaksiData) GetNamaPenerima() string {
	if m != nil {
		return m.NamaPenerima
	}
	return ""
}

func (m *TransaksiData) GetErrorsMessage() []string {
	if m != nil {
		return m.ErrorsMessage
	}
	return nil
}

func init() {
	proto.RegisterType((*TransaksiData)(nil), "transaksi.transaksiData")
}

func init() { proto.RegisterFile("transaksi.proto", fileDescriptor_8d8339947edf5dbf) }

var fileDescriptor_8d8339947edf5dbf = []byte{
	// 258 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x91, 0xb1, 0x4e, 0xf3, 0x30,
	0x10, 0x80, 0x7f, 0x27, 0x3f, 0x2d, 0xb9, 0x26, 0x2d, 0xf2, 0x64, 0xb1, 0x10, 0x8a, 0x10, 0x99,
	0x2a, 0x04, 0xaf, 0x50, 0xb1, 0x21, 0xa1, 0xc0, 0x1e, 0x1d, 0xd8, 0xaa, 0x4e, 0x8d, 0x9d, 0xca,
	0x0e, 0xf0, 0x3a, 0x8c, 0x3c, 0x26, 0xc2, 0xa1, 0x76, 0x3a, 0x30, 0x31, 0xde, 0xe7, 0x4f, 0xd6,
	0xa7, 0x3b, 0x58, 0xf4, 0x16, 0x8d, 0xc3, 0xad, 0xa3, 0xd5, 0xce, 0x76, 0x7d, 0xc7, 0xb3, 0x00,
	0x96, 0x9f, 0x09, 0x14, 0x61, 0x5a, 0x63, 0x8f, 0xfc, 0x1c, 0x72, 0x92, 0x4d, 0x60, 0x82, 0x95,
	0xac, 0x4a, 0xeb, 0x19, 0xc9, 0xa7, 0x3d, 0xe2, 0x67, 0x30, 0x23, 0xd9, 0xec, 0x94, 0xd9, 0x90,
	0x25, 0x2d, 0x12, 0x6f, 0x00, 0xc9, 0x87, 0x1f, 0x12, 0x05, 0x65, 0x49, 0xa3, 0x48, 0x47, 0x82,
	0x27, 0x5c, 0xc0, 0xd4, 0x74, 0x9a, 0x0c, 0xb6, 0xe2, 0x7f, 0xc9, 0xaa, 0xa4, 0xde, 0x8f, 0xfc,
	0x0a, 0x16, 0xef, 0xb8, 0xed, 0x5f, 0x47, 0x05, 0x47, 0x25, 0xab, 0xb2, 0x7a, 0xee, 0x71, 0x8c,
	0xb8, 0x80, 0xc2, 0xa0, 0xc6, 0x98, 0x31, 0xf1, 0x5a, 0xfe, 0x0d, 0x43, 0xc8, 0x48, 0x1a, 0x52,
	0xa6, 0x07, 0xd2, 0x10, 0x73, 0x09, 0x73, 0x65, 0x6d, 0x67, 0x5d, 0xa3, 0x95, 0x73, 0xb8, 0x51,
	0xe2, 0xb8, 0x4c, 0xab, 0xac, 0x2e, 0x06, 0x7a, 0x3f, 0xc0, 0x9b, 0x0f, 0x06, 0x27, 0x21, 0xea,
	0x51, 0xd9, 0x37, 0x7a, 0x51, 0xfc, 0x0e, 0x72, 0x6c, 0xdb, 0x58, 0x25, 0x56, 0x71, 0xd9, 0x07,
	0x7b, 0x3d, 0xfd, 0xf5, 0x65, 0xf9, 0xef, 0x9a, 0xf1, 0x35, 0xe4, 0x28, 0xe5, 0x1f, 0xff, 0x79,
	0x9e, 0xf8, 0xfb, 0xde, 0x7e, 0x05, 0x00, 0x00, 0xff, 0xff, 0x6d, 0x42, 0xda, 0x77, 0xf2, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TransaksiServiceClient is the client API for TransaksiService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TransaksiServiceClient interface {
	AllTransaksi(ctx context.Context, in *TransaksiData, opts ...grpc.CallOption) (TransaksiService_AllTransaksiClient, error)
	AddTransaksi(ctx context.Context, in *TransaksiData, opts ...grpc.CallOption) (*TransaksiData, error)
}

type transaksiServiceClient struct {
	cc *grpc.ClientConn
}

func NewTransaksiServiceClient(cc *grpc.ClientConn) TransaksiServiceClient {
	return &transaksiServiceClient{cc}
}

func (c *transaksiServiceClient) AllTransaksi(ctx context.Context, in *TransaksiData, opts ...grpc.CallOption) (TransaksiService_AllTransaksiClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TransaksiService_serviceDesc.Streams[0], "/transaksi.transaksiService/allTransaksi", opts...)
	if err != nil {
		return nil, err
	}
	x := &transaksiServiceAllTransaksiClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TransaksiService_AllTransaksiClient interface {
	Recv() (*TransaksiData, error)
	grpc.ClientStream
}

type transaksiServiceAllTransaksiClient struct {
	grpc.ClientStream
}

func (x *transaksiServiceAllTransaksiClient) Recv() (*TransaksiData, error) {
	m := new(TransaksiData)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *transaksiServiceClient) AddTransaksi(ctx context.Context, in *TransaksiData, opts ...grpc.CallOption) (*TransaksiData, error) {
	out := new(TransaksiData)
	err := c.cc.Invoke(ctx, "/transaksi.transaksiService/addTransaksi", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TransaksiServiceServer is the server API for TransaksiService service.
type TransaksiServiceServer interface {
	AllTransaksi(*TransaksiData, TransaksiService_AllTransaksiServer) error
	AddTransaksi(context.Context, *TransaksiData) (*TransaksiData, error)
}

func RegisterTransaksiServiceServer(s *grpc.Server, srv TransaksiServiceServer) {
	s.RegisterService(&_TransaksiService_serviceDesc, srv)
}

func _TransaksiService_AllTransaksi_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(TransaksiData)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TransaksiServiceServer).AllTransaksi(m, &transaksiServiceAllTransaksiServer{stream})
}

type TransaksiService_AllTransaksiServer interface {
	Send(*TransaksiData) error
	grpc.ServerStream
}

type transaksiServiceAllTransaksiServer struct {
	grpc.ServerStream
}

func (x *transaksiServiceAllTransaksiServer) Send(m *TransaksiData) error {
	return x.ServerStream.SendMsg(m)
}

func _TransaksiService_AddTransaksi_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransaksiData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransaksiServiceServer).AddTransaksi(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transaksi.transaksiService/AddTransaksi",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransaksiServiceServer).AddTransaksi(ctx, req.(*TransaksiData))
	}
	return interceptor(ctx, in, info, handler)
}

var _TransaksiService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "transaksi.transaksiService",
	HandlerType: (*TransaksiServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "addTransaksi",
			Handler:    _TransaksiService_AddTransaksi_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "allTransaksi",
			Handler:       _TransaksiService_AllTransaksi_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "transaksi.proto",
}
